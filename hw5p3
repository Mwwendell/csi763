function hw5p3

% Initialize the variables
x1=randn(1000,1);
x2=3*randn(1000,1);

% Empirical CDF
figure(1)
[ecdf1,bins1]=ecdf(x1);
[ecdf2,bins2]=ecdf(x2);
plot(bins1,ecdf1,'r')
hold on
plot(bins2,ecdf2,'b')
title('Empirical CDF')
xlabel('bin')
ylabel('Empirical CDF')
legend('std=1','std=3')


% Comparison to the expected
binsize1=2*iqr(x1)/(1000^(1/3));
nbins1=(max(x1)-min(x1))/binsize1;
hist1=hist(x1,nbins1);
binsize2=2*IQR(x2)/(1000^(1/3));
nbins2=(max(x2)-min(x2))/binsize2;
hist2=hist(x2,nbins2);

bins1=(min(x1)+binsize1/2):binsize1:(max(x1)-binsize1/2);
exp1=(1/(1*sqrt(2*pi)))*exp(-(((bins1-0).^2)/(2*(1^2))));
bins2=(min(x2)+binsize2/2):binsize2:(max(x2)-binsize2/2);
exp2=(1/(3*sqrt(2*pi)))*exp(-(((bins2-0).^2)/(2*(3^2))));
scale1=max(hist1)/max(exp1);
exp1=exp1*scale1;
scale2=max(hist2)/max(exp2);
exp2=exp2*scale2;

figure(2)
plot(bins1,exp1,'b')
hold on
plot(bins2,exp2,'r')
plot(bins1,hist1,'b--')
plot(bins2,hist2,'r--')
title('Histograms')
xlabel('Bin')
ylabel('Number in bin')
legend('Expected, std=1','Expected, std=3','Actual, std=1','Actual,std=3')

% Compute the chi-squared statistic for each
diff1=hist1-exp1;
diff1sq=diff1.^2;
inside1=diff1sq./exp1;
chisq1=sum(inside1)

diff2=hist2-exp2;
diff2sq=diff2.^2;
inside2=diff2sq./exp2;
chisq2=sum(inside2)


% Same distribution?
s1=std(x1); % woohoo! the built-in standard deviation is unbiased!
s2=std(x2);
x1bar=mean(x1);
x2bar=mean(x2);
n1=1000;
n2=1000;

% We use t because we are trying to prove whether they could be from
% the same distribution with the same variance
S12=sum((x1-x1bar).^2);
S22=sum((x2-x2bar).^2);
S2=S12+S22;
s2=S2/(n1+n2-2);
st=sqrt(s2);
t=(x1bar-x2bar)/(st*sqrt((1/n1)+(1/n2)))
pt=(1/sqrt(2*pi))*exp(-(t^2)/2)

% How many students til we reject?
for j=1:1000
    x1=randn(1000,1);
    x2=3*randn(1000,1);
    s1=std(x1);
    s2=std(x2);
    x1bar=mean(x1);
    x2bar=mean(x2);
    n1=1000;
    n2=1000;
    S12=sum((x1-x1bar).^2);
    S22=sum((x2-x2bar).^2);
    S2=S12+S22;
    s2=S2/(n1+n2-2);
    st=sqrt(s2);
    t=(x1bar-x2bar)/(st*sqrt((1/n1)+(1/n2)));
    pt=(1/sqrt(2*pi))*exp(-(t^2)/2);
    preg(j)=pt;
end

binsize1=2*iqr(preg)/(1000^(1/3));
nbins1=(max(preg)-min(preg))/binsize1;
[phist1,pbins1]=hist(preg,nbins1);
figure(3)
bar(pbins1,phist1,'b')
title('Histogram of probabilities')
xlabel('bin')
ylabel('Number in bin')

numless=0;
nummore=0;
for k=1:length(preg)
    if preg(k)<=0.1
        numless=numless+1;
    else
        nummore=nummore+1;
    end
end

probp01=numless/length(preg);
numlt01=1/probp01
